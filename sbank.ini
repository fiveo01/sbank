[condor] 
; This section points to the executables, and provides condor options
lalapps_cbc_sbank_pipe = /ligo/home/ligo.org/ryan.magee/stable_build_by_hand/opt/bin/lalapps_cbc_sbank_pipe
universe = vanilla
lalapps_cbc_sbank = /ligo/home/ligo.org/ryan.magee/stable_build_by_hand/opt/bin/lalapps_cbc_sbank
lalapps_cbc_sbank_choose_mchirp_boundaries = /ligo/home/ligo.org/ryan.magee/stable_build_by_hand/opt/bin/lalapps_cbc_sbank_choose_mchirp_boundaries

[accounting]
accounting-group = ligo.dev.o4.cbc.explore.test

[sbank]
; This section contains the parameters of the entire bank parameter
; space you wish to cover. sbank_pipe will divide the space for you.
approximant = SEOBNRv4_ROM
match-min = 0.99
flow = 15.0
fhigh-max = 1024.0
reference-psd = ./H1L1V1psd.xml.gz
instrument = L1
mass1-min = 3.0
mass1-max = 100.0
mass2-min = 3.0
mass2-max = 100.0
mtotal-min = 6.0
mtotal-max = 200.0
mratio-min = 1.0
mratio-max = 4.0
spin1-max = 0.40
spin1-min = -0.40
spin2-max = 0.40
spin2-min = -0.40
aligned-spin =
bank-seed = SBANK_COMBINED-SBANK_O2_V4.xml.gz
neighborhood-param = dur
neighborhood-size = 1.0
checkpoint = 50
;cache-waveforms =
; please check your memory requirements before setting this option
; if jobs use too much memory, they will swap and run forever
coarse-match-df = 2.0
iterative-match-df-max= 1.0
; If you want to add precomputed banks to the workflow
;bank-seed = FILENAME[:APPROX]

[coarse-sbank]
; This section is for planning the splitting of the parameter
; space. To do so, we generate a "coarse" bank, i.e., a bank on the
; same parameter space but with a weaker convergence criteria. This
; process gives a rough measure of the density of templates the final
; bank will require. Use the max-new-templates option to prevent the job
; from running forever, but the more templates you have in the coarse
; bank, the less "over-coverage" you will incur from the bank
; splitting process. A good rule of thumb is that you want ~1000
; templates per split bank.
max-new-templates = 15000
match-min = 0.93
convergence-threshold = 1000

[split]
; This section configures the parallelization. nbanks are how many
; splits (in chirp mass) you want. You can crank it to infinity at the
; cost of overcerage.
nbanks = 25
